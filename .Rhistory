reg_weights = c(1.84, -0.28, 0.15, -0.06, -0.04),
fixed = list(session = list(var_type = 'ordinal', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr')),
religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr'))),
randomeffect = list(int_client = list(variance = .02, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 + religion2 +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06, -0.04),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr')),
religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr'))),
randomeffect = list(int_client = list(variance = .02, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 + religion2 +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06, -0.04),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr')),
religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr'))),
randomeffect = list(int_client = list(variance = .02, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1  +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr')),
#religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr'))),
randomeffect = list(int_client = list(variance = .02, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr')))
#religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr')),
randomeffect = list(int_client = list(variance = .02, var_level = 2)),
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr'))),
#religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr')),
randomeffect = list(int_client = list(variance = 2.264, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06, -.04),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr')),
religion2 = list(var_type = 'factor', levels = c('ndu', 'dr', 'ndr'))),
randomeffect = list(int_client = list(variance = 2.264, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 +(1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr'))),
randomeffect = list(int_client = list(variance = 2.264, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(321)
sim_arguments <- list(
formula = y ~ 1 + weight + age + sex + (1 | neighborhood),
reg_weights = c(4, -0.03, 0.2, 0.33),
fixed = list(weight = list(var_type = 'continuous', mean = 180, sd = 30),
age = list(var_type = 'ordinal', levels = 30:60),
sex = list(var_type = 'factor', levels = c('male', 'female'))),
randomeffect = list(int_neighborhood = list(variance = 8, var_level = 2)),
sample_size = list(level1 = 10, level2 = 20)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
head(nested_data, n = 10)
View(nested_data)
library(psych)
psych::describe(nested_data)
library(lme4)
# MODEL 3
simmod <- lmer(y ~ weight + age + sex + (1 | neighborhood), REML=FALSE, data = Lefevor2020)
library(lme4)
# MODEL 3
simmod <- lmer(y ~ weight + age + sex + (1 | neighborhood), REML=FALSE, data = nested_data)
summary(simmod)
AIC(simmod) # request AIC
BIC(simmod) # request BIC
tab_model(simmod,  p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2", "Mod3"))
library(sjstats)
library(lme4)
library(sjstats)
# MODEL 3
simmod <- lmer(y ~ weight + age + sex + (1 | neighborhood), REML=FALSE, data = nested_data)
summary(simmod)
AIC(simmod) # request AIC
BIC(simmod) # request BIC
tab_model(simmod,  p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1", "Mod2", "Mod3"))
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
?tab_model
library(sjPlot)
library(lme4)
library(sjPlot)
# MODEL 3
simmod <- lmer(y ~ weight + age + sex + (1 | neighborhood), REML=FALSE, data = nested_data)
summary(simmod)
AIC(simmod) # request AIC
BIC(simmod) # request BIC
tab_model(simmod,  p.style = "numeric", show.ci = FALSE, show.df = FALSE, show.re.var = TRUE, show.aic = TRUE, show.dev = TRUE, use.viewer = TRUE, dv.labels = c("Mod1"))
#can swap this statement with the "file = "TabMod_Table"" to get Viewer output or the outfile that you can open in Word
#file = "TabMod_Table.doc"
?tab_model
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 + (1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr'))),
randomeffect = list(int_client = list(variance = 0.02, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 + (1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr'))),
randomeffect = list(int_client = list(variance = 0.917, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(210517)
sim_arguments <- list(
formula = y ~ 1 + session + sexualidentity + religion1 + (1 | client),
reg_weights = c(1.84, -0.28, 0.15, -0.06),
fixed = list(session = list(var_type = 'continuous', mean = 10.58, sd = 7.56),
sexid = list(var_type = 'factor', levels = c('het', 'lgbqq')),
religion1 = list(var_type = 'factor', levels = c('ndru', 'dr'))),
randomeffect = list(int_client = list(variance = 0.917, var_level = 2)),
sample_size = list(level1 = 5, level2 = 12825)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
library(simglm)
library(tidyverse)
set.seed(321)
sim_arguments <- list(
formula = y ~ 1 + weight + age + sex + (1 | neighborhood),
reg_weights = c(4, -0.03, 0.2, 0.33),
fixed = list(weight = list(var_type = 'continuous', mean = 180, sd = 30),
age = list(var_type = 'ordinal', levels = 30:60),
sex = list(var_type = 'factor', levels = c('male', 'female'))),
randomeffect = list(int_neighborhood = list(variance = 8, var_level = 2)),
sample_size = list(level1 = 10, level2 = 20)
)
nested_data <- sim_arguments %>%
simulate_fixed(data = NULL, .) %>%
simulate_randomeffect(sim_arguments) %>%
simulate_error(sim_arguments) %>%
generate_response(sim_arguments)
head(nested_data, n = 10)
-.28 - 3*(.01 *sqrt(12825))
-.28 + 3*(.01 *sqrt(12825))
.15 - 3*(.02 *sqrt(12825))
.15 + 3*(.02 *sqrt(12825))
-.06 - 3*(.01 *sqrt(12825))
-.06 + 3*(.01 *sqrt(12825))
-.04 - 3*(.01 *sqrt(12825))
-.04 + 3*(.01 *sqrt(12825))
.02 *sqrt(12825)
#SD for depression in empty model
.02*sqrt(12825)
set.seed(200513)
n_client = 12825
n_session = 5
b0 = 1.84 #intercept for depression
b1 = -.28 #b weight for L1 session
b2 = .15 #b weight for L2 sexual identity
b3 =  -.06 #b weight for L2 Rel1 (D-R vs ND-R & ND-U)
b4 = 0.04 #b weight for the L2 Rel2 (ND-R vs ND-U)
#the values used below are the +/- 3SD they produce continuous variables which later need to be transformed to categorical ones; admittedly this introduces a great deal of error/noise into the simulation
#the article didn't include a correlation matrix or M/SDs so this was a clunky process
( Session = runif(n_client*n_session, -3.67, 3.12)) #calc L1 Session, values are the +/3 3SD
( SexualIdentity = runif(n_client*Session, -6.64, 6.94)) #calc L2 Sexual Identity, values are the +/3 3SD
( Religion1 = runif(n_client*Session, -3.46, 3.34)) #calc L2 Religion1, values are the +/3 3SD
( Religion2 = rep (runif(n_session, -3.44, 3.36), each = n_session)) #calc L2 Religion2, values are the +/3 3SD
mu = 1.49 #intercept of empty model
sds = 2.264 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
#( church = rep(LETTERS[1:n_church], each = n_mbrs) ) #this worked in the prior
( client = rep(LETTERS[1:n_client], each = n_session) )
#( session = numbers[1:(n_client*n_session)] )
( clienteff = rnorm(n_client, 0, sds) )
( clienteff = rep(clienteff, each = n_session) )
( sessioneff = rnorm(n_client*n_session, 0, sd) )
( Depression = b0 + b1*Session + b2*SexualIdentity + b3*Religion1 + b4*Religion2 + clienteff + sessioneff)
( dat = data.frame(client, clienteff, sessioneff, Session, SexualIdentity, Religion1, Religion2, Depression) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2017D <- dat%>%
select(ID, client, Session, SexualIdentity, Religion1, Religion2, Depression)
Lefevor2017D$ClientID <- rep(c(1:12825), each = 5)
#rounded Sexual Identity into dichotomous variable
#85% were heterosexual,
View(Lefevor2017D)
library(robumeta)
#The following variables should be L2, but were simulated as if they were L1
Lefevor2017D$Rel1 <- as.numeric(group.mean(Lefevor2017D$Religion1,Lefevor2017$ClientID))#aggregated at group mean
#The following variables should be L2, but were simulated as if they were L1
Lefevor2017D$Rel1 <- as.numeric(group.mean(Lefevor2017D$Religion1,Lefevor2017D$ClientID))#aggregated at group mean
Lefevor2017D$Rel2 <- as.numeric(group.mean(Lefevor2017D$Religion2,Lefevor2017D$ClientID))#aggregated at group mean
Lefevor2017D$SxID <- as.numeric(group.mean(Lefevor2017D$SexualIdentity,Lefevor2017D$ClientID))#aggregated at group mean
set.seed(200513)
n_client = 12825
n_session = 5
b0 = 1.84 #intercept for depression
b1 = -.28 #b weight for L1 session
b2 = .15 #b weight for L2 sexual identity
b3 =  -.06 #b weight for L2 Rel1 (D-R vs ND-R & ND-U)
b4 = 0.04 #b weight for the L2 Rel2 (ND-R vs ND-U)
#the values used below are the +/- 3SD they produce continuous variables which later need to be transformed to categorical ones; admittedly this introduces a great deal of error/noise into the simulation
#the article didn't include a correlation matrix or M/SDs so this was a clunky process
( Session = runif(n_client*n_session, -3.67, 3.12)) #calc L1 Session, values are the +/3 3SD
( SexualIdentity = rep(runif(n_session, -6.64, 6.94), each = n_session)) #calc L2 Sexual Identity, values are the +/3 3SD
( Religion1 = rep(runif(n_session, -3.46, 3.34), each = n_session)) #calc L2 Religion1, values are the +/3 3SD
( Religion2 = rep (runif(n_session, -3.44, 3.36), each = n_session)) #calc L2 Religion2, values are the +/3 3SD
mu = 1.49 #intercept of empty model
sds = 2.264 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
#( church = rep(LETTERS[1:n_church], each = n_mbrs) ) #this worked in the prior
( client = rep(LETTERS[1:n_client], each = n_session) )
#( session = numbers[1:(n_client*n_session)] )
( clienteff = rnorm(n_client, 0, sds) )
( clienteff = rep(clienteff, each = n_session) )
( sessioneff = rnorm(n_client*n_session, 0, sd) )
( Depression = b0 + b1*Session + b2*SexualIdentity + b3*Religion1 + b4*Religion2 + clienteff + sessioneff)
( dat = data.frame(client, clienteff, sessioneff, Session, SexualIdentity, Religion1, Religion2, Depression) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2017D <- dat%>%
select(ID, client, Session, SexualIdentity, Religion1, Religion2, Depression)
Lefevor2017D$ClientID <- rep(c(1:12825), each = 5)
#rounded Sexual Identity into dichotomous variable
#85% were heterosexual,
library(robumeta)
#The following variables should be L2, but were simulated as if they were L1
Lefevor2017D$Rel1 <- as.numeric(group.mean(Lefevor2017D$Religion1,Lefevor2017D$ClientID))#aggregated at group mean
Lefevor2017D$Rel2 <- as.numeric(group.mean(Lefevor2017D$Religion2,Lefevor2017D$ClientID))#aggregated at group mean
Lefevor2017D$SxID <- as.numeric(group.mean(Lefevor2017D$SexualIdentity,Lefevor2017D$ClientID))#aggregated at group mean
#Rel2 has contrast codes for dominant religion (DR, 0), nondominant religious (NDR, 1) and nondominant unspecified (NDU, -1)
#Strategy is to figure out the raw score associated with the percentile rank of  -1 and 0, to set the breakpoints for the coding
#NDU coded as -1
#19.2+13.5+9.6
#NDU has bottom 42.3 percent
#DR coded as 0, so quantile cut will be 42.3 + 52.7 = 95th
#33.4 + 19.3
#52.7% of sample (according to article) was DR
#must look up percentile ranks for 5% and 57.5%
#NDR
#2.3+1+1+.7
#NDR has 5% of sample
#42.3+52.7
#quantile(Lefevor2017$Religion2, probs = c(.423, .95))
#effects coding the second Religion variable so that NDU = -1, DR = 0, NDR = 1
Lefevor2017$Rel2L2 <- ifelse(Lefevor2017$Religion2 <= -3.0877087, -1,
ifelse(Lefevor2017$Religion2 >= -3.0877087 & Lefevor2017$Religion2 <= 0.9299491, 0,1))
set.seed(200513)
n_client = 12825
n_session = 5
b0 = 1.84 #intercept for depression
b1 = -.28 #b weight for L1 session
b2 = .15 #b weight for L2 sexual identity
b3 =  -.06 #b weight for L2 Rel1 (D-R vs ND-R & ND-U)
b4 = 0.04 #b weight for the L2 Rel2 (ND-R vs ND-U)
#the values used below are the +/- 3SD they produce continuous variables which later need to be transformed to categorical ones; admittedly this introduces a great deal of error/noise into the simulation
#the article didn't include a correlation matrix or M/SDs so this was a clunky process
( Session = runif(n_client*n_session, -3.67, 3.12)) #calc L1 Session, values are the +/3 3SD
( SexualIdentity = rep(runif(n_session, -6.64, 6.94), each = n_session)) #calc L2 Sexual Identity, values are the +/3 3SD
( Religion1 = rep(runif(n_session, -3.46, 3.34), each = n_session)) #calc L2 Religion1, values are the +/3 3SD
( Religion2 = rep (runif(n_session, -3.44, 3.36), each = n_session)) #calc L2 Religion2, values are the +/3 3SD
mu = 1.49 #intercept of empty model
sds = 2.264 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
#( church = rep(LETTERS[1:n_church], each = n_mbrs) ) #this worked in the prior
( client = rep(c[1:n_client], each = n_session) )
set.seed(200513)
n_client = 12825
n_session = 5
b0 = 1.84 #intercept for depression
b1 = -.28 #b weight for L1 session
b2 = .15 #b weight for L2 sexual identity
b3 =  -.06 #b weight for L2 Rel1 (D-R vs ND-R & ND-U)
b4 = 0.04 #b weight for the L2 Rel2 (ND-R vs ND-U)
#the values used below are the +/- 3SD they produce continuous variables which later need to be transformed to categorical ones; admittedly this introduces a great deal of error/noise into the simulation
#the article didn't include a correlation matrix or M/SDs so this was a clunky process
( Session = runif(n_client*n_session, -3.67, 3.12)) #calc L1 Session, values are the +/3 3SD
( SexualIdentity = rep(runif(n_session, -6.64, 6.94), each = n_session)) #calc L2 Sexual Identity, values are the +/3 3SD
( Religion1 = rep(runif(n_session, -3.46, 3.34), each = n_session)) #calc L2 Religion1, values are the +/3 3SD
( Religion2 = rep (runif(n_session, -3.44, 3.36), each = n_session)) #calc L2 Religion2, values are the +/3 3SD
mu = 1.49 #intercept of empty model
sds = 2.264 #this is the SD of the DV
sd = 1 #this is the observation-level random effect variance that we set at 1
#( church = rep(LETTERS[1:n_church], each = n_mbrs) ) #this worked in the prior
( client = rep(LETTERS[1:n_client], each = n_session) )
#( session = numbers[1:(n_client*n_session)] )
( clienteff = rnorm(n_client, 0, sds) )
( clienteff = rep(clienteff, each = n_session) )
( sessioneff = rnorm(n_client*n_session, 0, sd) )
( Depression = b0 + b1*Session + b2*SexualIdentity + b3*Religion1 + b4*Religion2 + clienteff + sessioneff)
( dat = data.frame(client, clienteff, sessioneff, Session, SexualIdentity, Religion1, Religion2, Depression) )
library(dplyr)
dat <- dat %>% mutate(ID = row_number())
#moving the ID number to the first column; requires
dat <- dat%>%select(ID, everything())
Lefevor2017D <- dat%>%
select(ID, client, Session, SexualIdentity, Religion1, Religion2, Depression)
Lefevor2017D$ClientID <- rep(c(1:12825), each = 5)
View(Lefevor2017D)
#NDR
#2.3+1+1+.7
#NDR has 5% of sample
#42.3+52.7
quantile(Lefevor2017D$Religion2, probs = c(.423, .95))
#NDR
#2.3+1+1+.7
#NDR has 5% of sample
#42.3+52.7
quantile(Lefevor2017D$Religion2, probs = c(.423, .95))
Lefevor2017D$Rel2L2 <- ifelse(Lefevor2017D$Religion2 <= -0.3304528 , -1,
ifelse(Lefevor2017D$Religion2 >= 2.4446784 & Lefevor2017D$Religion2 <= 0.9299491, 0,1))
Lefevor2017D$Rel2L2 <- ifelse(Lefevor2017D$Religion2 <= -0.3304528 , -1,
ifelse(Lefevor2017D$Religion2 >= 2.4446784 & Lefevor2017D$Religion2 <= 0.9299491, 0,1))
#creating the  religion variable where DR is 0 and NDR and NDU are both 1
Lefevor2017$DRel0 <- plyr::mapvalues(Lefevor2017$Rel2L2, from = c(-1, 0, 1), to = c(1, 0, 1))
Lefevor2017D$Rel2L2 <- ifelse(Lefevor2017D$Religion2 <= -0.3304528 , -1,
ifelse(Lefevor2017D$Religion2 >= 2.4446784 & Lefevor2017D$Religion2 <= 0.9299491, 0,1))
#creating the  religion variable where DR is 0 and NDR and NDU are both 1
Lefevor2017D$DRel0 <- plyr::mapvalues(Lefevor2017D$Rel2L2, from = c(-1, 0, 1), to = c(1, 0, 1))
Rel2L2_table <- table(Lefevor2017D$Rel2L2)
prop.table(Rel2L2_table)
#NDR
#2.3+1+1+.7
#NDR has 5% of sample
#42.3+52.7
quantile(Lefevor2017D$Religion2, probs = c(.423, .95))
Lefevor2017D$Rel2L2 <- ifelse(Lefevor2017D$Religion2 <= -0.3304528 , -1,
ifelse(Lefevor2017D$Religion2 >= -0>3304529 & Lefevor2017D$Religion2 <= 2.4446784, 0,1))
Lefevor2017D$Rel2L2 <- ifelse(Lefevor2017D$Religion2 <= -0.3304528 , -1,
ifelse(Lefevor2017D$Religion2 >= -0.3304529 & Lefevor2017D$Religion2 <= 2.4446784, 0,1))
#checking to make sure that 52.7% are coded 2 (DR)
Rel2L2_table <- table(Lefevor2017D$Rel2L2)
prop.table(Rel2L2_table)
#creating the  religion variable where DR is 0 and NDR and NDU are both 1
Lefevor2017D$DRel0 <- plyr::mapvalues(Lefevor2017D$Rel2L2, from = c(-1, 0, 1), to = c(1, 0, 1))
DRel0_table <- table(Lefevor2017D$DRel0)
prop.table(DRel0_table)
#heterosexual is -1
#LGBTQIA+ is 1
quantile(Lefevor2017D$SxID, probs = c(.85))
#heterosexual is -1
#LGBTQIA+ is 1
quantile(Lefevor2017D$SxID, probs = c(.85))
quantile(Lefevor2017D$SxID, probs = c(.85))
Lefevor2017D$SexID <- ifelse(LefevorD2017$SxID <= .85, -1,1)
quantile(Lefevor2017D$SxID, probs = c(.85))
Lefevor2017D$SexID <- ifelse(LefevorD2017$SexualIdentity <= .85, -1,1)
Lefevor2017D$SexID <- ifelse(Lefevor2017D$SexualIdentity <= .85, -1,1)
Lefevor2017D$Het0 <- plyr::mapvalues(Lefevor2017D$SexID, from = c(-1,1), to = c(0,1))
Het0_table <- table(Lefevor2017D$Het0)
prop.tableD(Het0_table)
DRel0_table <- table(Lefevor2017D$DRel0)
prop.table(DRel0_table)
Het0_table <- table(Lefevor2017D$Het0)
prop.tableD(Het0_table)
Het0_table <- table(Lefevor2017D$Het0)
prop.table(Het0_table)#to make sure that 52.7% are coded 2 (DR)
quantile(Lefevor2017D$SexualIdentity, probs = c(.85))
Lefevor2017D$SexID <- ifelse(Lefevor2017D$SexualIdentity <= 5.747946, -1,1)
Lefevor2017D$Het0 <- plyr::mapvalues(Lefevor2017D$SexID, from = c(-1,1), to = c(0,1))
Het0_table <- table(Lefevor2017D$Het0)
prop.table(Het0_table)#to make sure that 52.7% are coded 2 (DR)
#Right from the beginning I centered this so that 0 would represent intake
Lefevor2017D$Session0 <- as.integer(scales::rescale(Lefevor2017D$Session, to = c(0, 19)))
Lefevor2017 <- Lefevor2017%>%
dplyr::group_by(ClientID) %>%
mutate(Index = rank(Session))
Lefevor2017D <- Lefevor2017D%>%
dplyr::group_by(ClientID) %>%
mutate(Index = rank(Session))
#selecting the simulated variables
Lefevor2017D_sim <- Lefevor2017D%>%
select(ClientID, Index, Session0, Anxiety, DRel0, Het0)
#selecting the simulated variables
Lefevor2017D_sim <- Lefevor2017D%>%
select(ClientID, Index, Session0, Depression, DRel0, Het0)
library(data.table)
DLfvrWp1<-reshape2::dcast(Lefevor2017D_sim, ClientID + DRel0 + Het0 ~ Index, value.var = c("Index"))
#rename the anxiety variable
DLfvrWp1<-  rename(DLfvrWp1, Index1 = "1", Index2 = "2", Index3 = "3", Index4 = "4", Index5 = "5")
DLfvrWp2<-reshape2::dcast(DLefevor2017_sim, ClientID ~ Index, value.var = c("Depression"))
library(data.table)
DLfvrWp1<-reshape2::dcast(Lefevor2017D_sim, ClientID + DRel0 + Het0 ~ Index, value.var = c("Index"))
#rename the anxiety variable
DLfvrWp1<-  rename(DLfvrWp1, Index1 = "1", Index2 = "2", Index3 = "3", Index4 = "4", Index5 = "5")
DLfvrWp2<-reshape2::dcast(Lefevor2017D_sim, ClientID ~ Index, value.var = c("Depression"))
#rename the anxiety variable
DLfvrWp2<-  rename(DLfvrWp2, Dep1 = "1", Dep2 = "2", Dep3 = "3", Dep4 = "4", Dep5 = "5")
#For remaining L1 variable, do them one at a time -- key them from the person-level ID and the wave/index.
DLfvrWp3<-reshape2::dcast(Lefevor2017D_sim, ClientID ~ Index, value.var = c("Session0"))
DLfvrWp3<-  rename(DLfvrWp3, Sess1 = "1", Sess2 = "2", Sess3 = "3", Sess4 = "4", Sess5 = "5")
#Next, join the dataframes by the person-level ID
#Only two can be joined at a time
DLfvrWide <- dplyr::full_join(DLfvrWp1, DLfvrWp2, by = c("ClientID"))
DLfvrWide <- dplyr::full_join(DLfvrWide, DLfvrWp3,  by = c("ClientID"))
View(DLfvrWide)
write.table(DLfvrWide, file="DLfvrWide.csv", sep=",", col.names=TRUE, row.names=FALSE)
DLfvrWide <- read.csv ("DLfvrWide.csv", head = TRUE, sep = ",")
citr:::insert_citation()
